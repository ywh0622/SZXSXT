{"version":3,"file":"js/278.349f1056.js","mappings":"6GAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,25BCwNjB,MAAM,MAAEI,IAAUC,EAAAA,EAAAA,MAGZC,EAAe,CAEnBC,SAAU,SACVC,MAAO,aAIT,IAAIC,GAAeC,EAAAA,EAAAA,IAAI,MACnBC,GAAgBD,EAAAA,EAAAA,IAAI,MACxB,MAAME,EAAmBC,IAEnBA,EAAKC,YACPL,EAAaM,MAAQF,EAAKC,WAGxBD,EAAKF,cACPA,EAAcI,MAAQF,EAEtBF,EAAcI,MAAQ,IACxB,EAKF,IAAIC,GAAcN,EAAAA,EAAAA,IAAI,IACtB,MAAMO,EAAcC,UAClB,IAAIC,QAAiBf,EAAMgB,KAAKH,cAGhCD,EAAYD,MAAQI,CAAQ,EAQxBE,IAJaX,EAAAA,EAAAA,IAAI,SAIG,CACxBH,SAAU,gBACVC,MAAO,aAGT,IAAIc,GAAsBZ,EAAAA,EAAAA,IAAI,CAC5Ba,KAAM,GACNC,GAAI,KAGN,MAAMC,EAAwBZ,IAE5BS,EAAoBP,MAAQF,CAAI,EAOlC,IAAIa,GAAShB,EAAAA,EAAAA,KAAI,GAIjB,MAAMiB,GAAgBjB,EAAAA,EAAAA,KAAI,GAEpBkB,EAAc,KAClBD,EAAcZ,OAAQ,CAAI,EAMtBc,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,cAClBC,MAAK,KACJF,GAAM,IAEPG,OAAM,QAEL,EAGAC,EAAa,KACjBH,EAAAA,EAAAA,QAAqB,WAClBC,MAAK,KACJL,EAAcZ,OAAQ,GACtBoB,EAAAA,EAAAA,IAAU,CACRC,WAAW,EACXC,QAAS,OACTd,KAAM,WACN,IAEHU,OAAM,QAEL,EAIN,IAAIK,GAAoB5B,EAAAA,EAAAA,IAAI,IAC5B,MAAM6B,EAAuBrB,UAC3B,IAAIsB,QAAkCpC,EAAMgB,KAAKmB,uBAGjDD,EAAkBvB,MAAQyB,CAAyB,EAK/CC,EAAiBC,IACrB,IAAIC,GAAO,EAeX,OAdAL,EAAkBvB,MAAM6B,SAASC,IAE3BA,EAAK,eAAiBpC,EAAaM,OAErC8B,EAAK,aAAaD,SAASE,IAEvBA,EAAM,YAAcxB,EAAoBP,MAAM,YAC9C+B,EAAM,mBAAqBJ,IAE3BC,GAAO,EACT,GAEJ,IAEKA,CAAI,E,OAGbI,EAAAA,EAAAA,KAAU,KAER9B,IACAsB,GAAsB,I,iiLC7VxB,MAAMS,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://mbse_vue3/./node_modules/vue-loader/dist/exportHelper.js","webpack://mbse_vue3/./src/views/repo/Repository.vue","webpack://mbse_vue3/./src/views/repo/Repository.vue?2b66"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\r\n  <div class=\"box\">\r\n    <el-container>\r\n      <el-aside width=\"200px\">\r\n        <el-tree\r\n          :data=\"projectList\"\r\n          :props=\"projectProps\"\r\n          @node-click=\"handleNodeClick\"\r\n          highlight-current\r\n        >\r\n          <template #default=\"{ data }\">\r\n            <component class=\"icons\" :is=\"data.icon\"></component>\r\n            <span style=\"margin-left: 10px\">{{ data.showName }}</span>\r\n          </template>\r\n        </el-tree>\r\n      </el-aside>\r\n      <el-main>\r\n        <div v-if=\"childProjects == null\" style=\"font-size: 18px\">\r\n          请选择项目或模型\r\n        </div>\r\n        <div v-else>\r\n          <el-tabs type=\"border-card\" class=\"demo-tabs\">\r\n            <!-- Tree View部分 -->\r\n            <el-tab-pane>\r\n              <!-- 标题部分 -->\r\n              <template #label>\r\n                <span class=\"custom-tabs-label\">\r\n                  <el-icon><Link /></el-icon>\r\n                  <span>Tree View</span>\r\n                </span>\r\n              </template>\r\n              <!-- 文件树 -->\r\n              <el-tree\r\n                :data=\"childProjects.childProjects\"\r\n                :props=\"childProjectProps\"\r\n                @node-click=\"childhandleNodeClick\"\r\n                :expand-on-click-node=\"false\"\r\n                highlight-current\r\n              >\r\n                <template #default=\"{ data }\">\r\n                  <component class=\"icons\" :is=\"data.icon\"></component>\r\n                  <span style=\"margin-left: 10px\">{{ data.showName }}</span>\r\n                  <el-button\r\n                    style=\"margin-left: 600px\"\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    @click=\"showDetails\"\r\n                    >查看</el-button\r\n                  >\r\n                </template>\r\n              </el-tree>\r\n            </el-tab-pane>\r\n            <!-- Grapha View部分 -->\r\n            <el-tab-pane>\r\n              <!-- 标题部分 -->\r\n              <template #label>\r\n                <span class=\"custom-tabs-label\">\r\n                  <el-icon><Link /></el-icon>\r\n                  <span>Graph View</span>\r\n                </span>\r\n              </template>\r\n              <div v-if=\"childProjects.childProjects.length > 0\">\r\n                <!-- 图形展示部分 -->\r\n                <div class=\"graph\">\r\n                  <div class=\"circle1\" style=\"margin-right: 0px\">\r\n                    <el-button\r\n                      @click=\"drawer = true\"\r\n                      style=\"margin: auto\"\r\n                      class=\"drawer-btn\"\r\n                    >\r\n                      File1\r\n                    </el-button>\r\n                  </div>\r\n                  <div style=\"margin: auto 0\">-------------------></div>\r\n                  <div\r\n                    class=\"circle1\"\r\n                    style=\"background-color: red; margin: auto 0px\"\r\n                  >\r\n                    <el-button\r\n                      @click=\"drawer = true\"\r\n                      style=\"margin: auto; background-color: red\"\r\n                      class=\"drawer-btn\"\r\n                    >\r\n                      CAD-document\r\n                    </el-button>\r\n                  </div>\r\n                  <div style=\"margin: auto 0\">-------------------></div>\r\n                  <div\r\n                    class=\"circle1\"\r\n                    style=\"background-color: green; margin-left: 0px\"\r\n                  >\r\n                    <el-button\r\n                      @click=\"drawer = true\"\r\n                      style=\"margin: auto; background-color: green\"\r\n                      class=\"drawer-btn\"\r\n                    >\r\n                      MySQL-document\r\n                    </el-button>\r\n                  </div>\r\n                </div>\r\n                <!-- 弹出详情部分 -->\r\n                <el-drawer\r\n                  title=\"我是标题\"\r\n                  v-model=\"drawer\"\r\n                  :with-header=\"false\"\r\n                >\r\n                  <el-descriptions\r\n                    title=\"Descriptions\"\r\n                    :column=\"1\"\r\n                    border\r\n                    style=\"font-style: normal\"\r\n                  >\r\n                    <el-descriptions-item\r\n                      label=\"Property\"\r\n                      :labelStyle=\"{\r\n                        width: '25px',\r\n                        'font-weight': 'bold',\r\n                        'font-size': '18px',\r\n                      }\"\r\n                      :contentStyle=\"{\r\n                        'font-weight': 'bold',\r\n                        'font-size': '18px',\r\n                      }\"\r\n                    >\r\n                      Value\r\n                    </el-descriptions-item>\r\n                    <el-descriptions-item label=\"project_id\"\r\n                      >项目id</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"project_name\"\r\n                      >项目名字</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"project_descriptions\"\r\n                      >项目描述</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"project_creattime\"\r\n                      >项目创建时间</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"model_id\"\r\n                      >模型id</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"model_source\"\r\n                      >模型源头</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"moudle_target\"\r\n                      >模型目标</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"model_data\"\r\n                      >模型数据类型</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"model_url\"\r\n                      >外部模型数据地址</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"model_version\"\r\n                      >模型版本</el-descriptions-item\r\n                    >\r\n                    <el-descriptions-item label=\"model_modeified\"\r\n                      >模型修改时间</el-descriptions-item\r\n                    >\r\n                  </el-descriptions>\r\n                </el-drawer>\r\n              </div>\r\n              <div v-else>暂无数据</div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n\r\n    <!-- 弹出框部分 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"childCurrentProject.showName\"\r\n      width=\"30%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <!-- 标签体属性展示 -->\r\n      <el-form :model=\"childCurrentProject\" label-width=\"80px\">\r\n        <el-form-item label=\"Type\" v-if=\"childCurrentProject.type != null\">\r\n          <el-input\r\n            :disabled=\"checkModified('type')\"\r\n            v-model=\"childCurrentProject.type\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Name\" v-if=\"childCurrentProject.name != null\">\r\n          <el-input\r\n            :disabled=\"checkModified('name')\"\r\n            v-model=\"childCurrentProject.name\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Source\" v-if=\"childCurrentProject.source != null\">\r\n          <el-input\r\n            :disabled=\"checkModified('source')\"\r\n            v-model=\"childCurrentProject.source\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Target\" v-if=\"childCurrentProject.target != null\">\r\n          <el-input\r\n            :disabled=\"checkModified('target')\"\r\n            v-model=\"childCurrentProject.target\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Id\" v-if=\"childCurrentProject.id != null\">\r\n          <el-input\r\n            :disabled=\"checkModified('id')\"\r\n            v-model=\"childCurrentProject.id\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <!-- 点击后可修改的内容框改变 -->\r\n          <!-- <el-button type=\"primary\" @click=\"changeInfo\"> 修改 </el-button> -->\r\n          <!-- 提交编辑后的信息 -->\r\n          <el-button type=\"primary\" @click=\"changeInfo\"> 确定 </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, getCurrentInstance, onMounted } from \"vue\";\r\nimport { ElMessageBox, ElMessage } from \"element-plus\";\r\nimport { SortUp } from \"@element-plus/icons-vue\";\r\nconst { proxy } = getCurrentInstance();\r\n\r\n// 左侧 el-tree配置\r\nconst projectProps = {\r\n  // 目前只有一级目录，没有子目录，所以children不需要启用\r\n  children: \"models\",\r\n  label: \"modelType\",\r\n};\r\n// 左侧 el-tree 点击事件 点击对应项目后，currentProject为当前点击项目信息,childProjects为当前点击项目信息的子内容\r\n//\r\nlet currentModel = ref(null);\r\nlet childProjects = ref(null);\r\nconst handleNodeClick = (data) => {\r\n  // 如果该节点下存在modelType属性，就将modelType属性的值赋给currentModel变量\r\n  if (data.modelType) {\r\n    currentModel.value = data.modelType;\r\n  }\r\n  // 如果该节点下存在子项目，就将子项目的值赋给childProjects变量\r\n  if (data.childProjects) {\r\n    childProjects.value = data;\r\n  } else {\r\n    childProjects.value = null;\r\n  }\r\n  // console.log(\"currentModel: \", currentModel.value);\r\n  // console.log(\"childProjects: \", childProjects.value);\r\n};\r\n// 左侧 el-tree 通过api获取项目\r\nlet projectList = ref([]);\r\nconst getRepoList = async () => {\r\n  let tempList = await proxy.$api.getRepoList();\r\n  // 向接口请求数据，tempList为得到后的数据\r\n  // console.log(\"tempList : \", tempList);\r\n  projectList.value = tempList;\r\n  // console.log(\"得到项目的信息数据\", projectList);\r\n};\r\n\r\nconst activeName = ref(\"first\");\r\n\r\n// 右侧 Tree View 设置\r\n// 右侧 el-tree配置\r\nconst childProjectProps = {\r\n  children: \"childProjects\",\r\n  label: \"showName\",\r\n};\r\n// 右侧 el-tree 点击事件 点击对应项目后，childCurrentProject为当前点击项目详细信息\r\nlet childCurrentProject = ref({\r\n  type: \"\",\r\n  id: \"\",\r\n});\r\n// 点击事件，点击具体的节点时，将该节点的信息赋值给childCurrentProject\r\nconst childhandleNodeClick = (data) => {\r\n  // console.log(\"handleNodeClick\", data);\r\n  childCurrentProject.value = data;\r\n  // console.log(\"childCurrentProject: \", childCurrentProject.value);\r\n  // console.log(\"currentModel: \", currentModel.value);\r\n};\r\n\r\n// 右侧 Graph View 设置\r\n// drawer控制详情框是否弹出，false不弹出，true弹出\r\nlet drawer = ref(false);\r\n\r\n// Tree View页面中 点击查看后弹出相应的内容\r\n// 控制弹窗是否展示\r\nconst dialogVisible = ref(false);\r\n// 点击查看后 将dialogVisible设置为true 使窗口出现\r\nconst showDetails = () => {\r\n  dialogVisible.value = true;\r\n  // console.log(\"显示详情\");\r\n  // console.log(\"childCurrentProject: \", childCurrentProject.value);\r\n};\r\n\r\n// 点击X号触发该事件\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm(\"是否确认关闭该窗口?\")\r\n    .then(() => {\r\n      done();\r\n    })\r\n    .catch(() => {\r\n      // catch error\r\n    });\r\n};\r\n// 提交修改后的信息\r\nconst changeInfo = () => {\r\n  ElMessageBox.confirm(\"是否确认提交?\")\r\n    .then(() => {\r\n      dialogVisible.value = false;\r\n      ElMessage({\r\n        showClose: true,\r\n        message: \"修改成功\",\r\n        type: \"success\",\r\n      });\r\n    })\r\n    .catch(() => {\r\n      // catch error\r\n    });\r\n};\r\n\r\n// 获取项目中可以修改的属性名\r\nlet modifiableElement = ref([]);\r\nconst getModifiableElement = async () => {\r\n  let tempModifiableElementList = await proxy.$api.getModifiableElement();\r\n  // 向接口请求数据，tempList为得到后的数据\r\n  // console.log(\"tempModifiableElementList : \", tempModifiableElementList);\r\n  modifiableElement.value = tempModifiableElementList;\r\n  // console.log(\"得到项目可以修改的属性名\", modifiableElement);\r\n};\r\n\r\n// xml属性是否可以修改判断，返回true代表不可以修改，false为可修改\r\nconst checkModified = (tagName) => {\r\n  let flag = true;\r\n  modifiableElement.value.forEach((item) => {\r\n    // console.log(item);\r\n    if (item[\"modelType\"] === currentModel.value) {\r\n      // console.log(item[\"attribute\"]);\r\n      item[\"attribute\"].forEach((item1) => {\r\n        if (\r\n          item1[\"tagName\"] == childCurrentProject.value[\"tagName\"] &&\r\n          item1[\"modifiableName\"] == tagName\r\n        ) {\r\n          flag = false;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return flag;\r\n};\r\n\r\nonMounted(() => {\r\n  // 该组件被启用时就要调用获取项目总数函数\r\n  getRepoList();\r\n  getModifiableElement();\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.box {\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100%;\r\n}\r\n.el-aside {\r\n  height: 100%;\r\n  border-right: rgb(226, 226, 226) 5px solid;\r\n}\r\n.el-tree {\r\n  padding: 5px;\r\n  font-size: 15px;\r\n}\r\n.el-main {\r\n  padding: 0px;\r\n}\r\n.el-tabs {\r\n  font-style: italic;\r\n}\r\n\r\n.demo-tabs > .el-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n.demo-tabs .custom-tabs-label .el-icon {\r\n  vertical-align: middle;\r\n}\r\n.demo-tabs .custom-tabs-label span {\r\n  vertical-align: middle;\r\n  margin-left: 4px;\r\n}\r\n.el-tabs--border-card {\r\n  border: 0px;\r\n}\r\n.icons {\r\n  width: 18px;\r\n  height: 18px;\r\n}\r\n\r\n.graph {\r\n  height: 500px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.circle1 {\r\n  /*background: burlywood;*/\r\n  background-color: #fff;\r\n  border: 2px solid #000;\r\n  color: #000;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  margin: auto;\r\n  text-align: center; /* 文字水平居中 */\r\n  line-height: 150px;\r\n}\r\n.drawer-btn {\r\n  background-color: #fff;\r\n  border: 0;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  color: #000;\r\n}\r\n</style>","import script from \"./Repository.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Repository.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Repository.vue?vue&type=style&index=0&id=56766e3b&lang=less&scoped=true\"\n\nimport exportComponent from \"E:\\\\Vue\\\\project\\\\mbse_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-56766e3b\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","proxy","getCurrentInstance","projectProps","children","label","currentModel","ref","childProjects","handleNodeClick","data","modelType","value","projectList","getRepoList","async","tempList","$api","childProjectProps","childCurrentProject","type","id","childhandleNodeClick","drawer","dialogVisible","showDetails","handleClose","done","ElMessageBox","then","catch","changeInfo","ElMessage","showClose","message","modifiableElement","getModifiableElement","tempModifiableElementList","checkModified","tagName","flag","forEach","item","item1","onMounted","__exports__"],"sourceRoot":""}