{"version":3,"file":"js/597.d9a34f19.js","mappings":"6GAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,oNC+IjB,MAAM,MAAEI,IAAUC,EAAAA,EAAAA,MACZC,GAAOC,EAAAA,EAAAA,IAAI,IACXC,GAAaC,EAAAA,EAAAA,IAAS,CAC1B,CACEC,KAAM,WACNC,MAAO,SACPC,MAAO,KAET,CACEF,KAAM,OACNC,MAAO,QACPC,MAAO,KAET,CACEF,KAAM,aACNC,MAAO,OACPC,MAAO,KAET,CACEF,KAAM,cACNC,MAAO,KACPC,MAAO,OAGLC,GAASJ,EAAAA,EAAAA,IAAS,CACtBK,MAAO,EACPC,KAAM,EACNC,MAAO,GACPC,KAAM,KAGRC,eAAeC,EAAYN,GAEzB,IAAIO,QAAYhB,EAAMiB,KAAKF,YAAYN,GAGvCA,EAAOC,MAAQM,EAAIE,MACnBhB,EAAKiB,MAAQH,EAAId,KAAKkB,KAAKC,GAClBA,GAEX,CAEA,MAAMC,EAAcX,IAElBF,EAAOE,KAAOA,EACdI,EAAYN,EAAO,EAGfc,GAAalB,EAAAA,EAAAA,IAAS,CAC1BmB,QAAS,KAGLC,EAAe,KACnBhB,EAAOI,KAAOU,EAAWC,QACzBT,EAAYN,EAAO,EAIfiB,GAAgBvB,EAAAA,EAAAA,KAAI,GAGpBwB,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,UAClBC,MAAK,KAEJ9B,EAAM+B,MAAMC,SAASC,cACrBL,GAAM,IAEPM,OAAM,QAEL,EAIAC,GAAW9B,EAAAA,EAAAA,IAAS,CACxBQ,KAAM,GACNuB,YAAa,EACbC,SAAU,GACVC,WAAY,KAIRC,EAAW,KAEfvC,EAAM+B,MAAMC,SAASQ,UAAS1B,UAC5B,GAAI2B,EACF,GAAoB,OAAhBC,EAAOvB,MAAgB,CACzB,IAAIH,QAAYhB,EAAMiB,KAAK0B,QAAQR,GACnCS,QAAQC,IAAI,MAAO7B,GACfA,IACFU,EAAcP,OAAQ,EAItBnB,EAAM+B,MAAMC,SAASC,cACrBlB,EAAYN,IACZqC,EAAAA,EAAAA,IAAU,CACRC,WAAW,EACXC,QAAS,OACTC,KAAM,YAGZ,KAAO,CAGL,IAAIjC,QAAYhB,EAAMiB,KAAKiC,SAASf,GAEhCnB,IACFU,EAAcP,OAAQ,EAItBnB,EAAM+B,MAAMC,SAASC,cACrBlB,EAAYN,KAEdqC,EAAAA,EAAAA,IAAU,CACRC,WAAW,EACXC,QAAS,OACTC,KAAM,WAEV,MAEAH,EAAAA,EAAAA,IAAU,CACRC,WAAW,EACXC,QAAS,WACTC,KAAM,SAEV,GACA,EAIEE,EAAe,KACnBzB,EAAcP,OAAQ,EAEtBnB,EAAM+B,MAAMC,SAASC,aAAa,EAI9BS,GAASvC,EAAAA,EAAAA,IAAI,OAGbiD,EAAcC,IAClBT,QAAQC,IAAI,aAAcQ,GAC1B3B,EAAcP,OAAQ,EACtBuB,EAAOvB,MAAQ,OAOfnB,EAAMsD,WAAU,KAEdC,OAAOC,OAAOrB,EAAUkB,EAAI,GAC5B,EAIEI,EAAY,KAChB/B,EAAcP,OAAQ,EACtBuB,EAAOvB,MAAQ,KAAK,EAIhBuC,EAAgBL,IAEpBxB,EAAAA,EAAAA,QAAqB,UAClBC,MAAKhB,gBAEEd,EAAMiB,KAAK0C,WAAW,CAC1BC,GAAIP,EAAIO,MAEVd,EAAAA,EAAAA,IAAU,CACRC,WAAW,EACXC,QAAS,OACTC,KAAM,YAERlC,EAAYN,EAAO,IAEpByB,OAAM,QAAS,E,OAGpB2B,EAAAA,EAAAA,KAAU,KACR9C,EAAYN,EAAO,I,27GC1UrB,MAAMqD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://mbse_vue3/./node_modules/vue-loader/dist/exportHelper.js","webpack://mbse_vue3/./src/views/user/User.vue","webpack://mbse_vue3/./src/views/user/User.vue?6411"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\r\n  <div class=\"user-main\">\r\n    <!-- 最顶部 新增和搜索区域 -->\r\n    <div class=\"user-header\">\r\n      <!-- 新增 -->\r\n      <el-button type=\"primary\" @click=\"handleAdd\"> 新增 </el-button>\r\n      <!-- 搜索 -->\r\n      <el-form :inline=\"true\" :model=\"formInline\">\r\n        <el-form-item label=\"请输入\">\r\n          <el-input\r\n            v-model=\"formInline.keyword\"\r\n            placeholder=\"用户名/工作部门\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!-- 用户数据展示区域 -->\r\n    <div class=\"table\">\r\n      <el-table :data=\"list\" style=\"width: 100%\" height=\"500px\">\r\n        <!-- 遍历给定的tableLabel来得到表格信息框名称，如数字线程软件、工程负责人等 -->\r\n        <el-table-column\r\n          v-for=\"item in tableLabel\"\r\n          :key=\"item.label\"\r\n          :label=\"item.label\"\r\n          :prop=\"item.prop\"\r\n          :width=\"item.width\"\r\n        />\r\n        <!-- 用户信息操作栏 -->\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              type=\"danger\"\r\n              size=\"small\"\r\n              @click=\"handleDelete(scope.row)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 页码栏 -->\r\n      <el-pagination\r\n        small\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"config.total\"\r\n        :page-size=\"config.limit\"\r\n        @current-change=\"changePage\"\r\n        class=\"pager mt-4\"\r\n      />\r\n    </div>\r\n    <!-- 新增/删除用户提示框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"action == 'add' ? '新增用户' : '编辑用户'\"\r\n      width=\"35%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <el-form :inline=\"true\" :model=\"formUser\" ref=\"userForm\">\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item\r\n              label=\"线程软件\"\r\n              prop=\"software\"\r\n              :rules=\"[\r\n                {\r\n                  required: true,\r\n                  message: '线程软件不能为空',\r\n                },\r\n              ]\"\r\n            >\r\n              <el-input\r\n                v-model=\"formUser.software\"\r\n                placeholder=\"请输入线程软件\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item\r\n              label=\"工程负责人\"\r\n              prop=\"name\"\r\n              :rules=\"[\r\n                {\r\n                  required: true,\r\n                  message: '工程负责人不能为空',\r\n                },\r\n              ]\"\r\n            >\r\n              <el-input\r\n                v-model=\"formUser.name\"\r\n                placeholder=\"请输入工程负责人\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item\r\n              label=\"工作部门\"\r\n              prop=\"department\"\r\n              :rules=\"[\r\n                {\r\n                  required: true,\r\n                  message: '工作部门不能为空',\r\n                },\r\n              ]\"\r\n            >\r\n              <el-input\r\n                v-model=\"formUser.department\"\r\n                placeholder=\"请输入工作部门\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item\r\n              label=\"电话\"\r\n              prop=\"phoneNumber\"\r\n              :rules=\"[\r\n                {\r\n                  required: true,\r\n                  message: '电话不能为空',\r\n                },\r\n              ]\"\r\n            >\r\n              <el-input\r\n                v-model.number=\"formUser.phoneNumber\"\r\n                placeholder=\"请输入电话\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row style=\"justify-content: flex-end\">\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleCancel\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">确定</el-button>\r\n          </el-form-item>\r\n        </el-row>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { getCurrentInstance, onMounted, reactive, ref } from \"vue\";\r\nimport { ElMessageBox, ElMessage } from \"element-plus\";\r\n\r\nconst { proxy } = getCurrentInstance();\r\nconst list = ref([]);\r\nconst tableLabel = reactive([\r\n  {\r\n    prop: \"software\",\r\n    label: \"数字线程软件\",\r\n    width: 280,\r\n  },\r\n  {\r\n    prop: \"name\",\r\n    label: \"工程负责人\",\r\n    width: 280,\r\n  },\r\n  {\r\n    prop: \"department\",\r\n    label: \"工作部门\",\r\n    width: 280,\r\n  },\r\n  {\r\n    prop: \"phoneNumber\",\r\n    label: \"电话\",\r\n    width: 280,\r\n  },\r\n]);\r\nconst config = reactive({\r\n  total: 0,\r\n  page: 1,\r\n  limit: 11,\r\n  name: \"\",\r\n});\r\n\r\nasync function getUserData(config) {\r\n  // console.log('User.vue 调用getUserData函数');\r\n  let res = await proxy.$api.getUserData(config);\r\n  // console.log('User.vue 调用getUserData函数后');\r\n  // console.log('res', res);\r\n  config.total = res.count;\r\n  list.value = res.list.map((item) => {\r\n    return item;\r\n  });\r\n}\r\n\r\nconst changePage = (page) => {\r\n  // console.log(page );\r\n  config.page = page;\r\n  getUserData(config);\r\n};\r\n\r\nconst formInline = reactive({\r\n  keyword: \"\",\r\n});\r\n\r\nconst handleSearch = () => {\r\n  config.name = formInline.keyword;\r\n  getUserData(config);\r\n};\r\n\r\n// 控制对话框的显示与隐藏\r\nconst dialogVisible = ref(false);\r\n\r\n// 点击对话的x\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm(\"确定关闭吗?\")\r\n    .then(() => {\r\n      // resetFields需要在el-form-item标签体内添加属性prop\r\n      proxy.$refs.userForm.resetFields();\r\n      done();\r\n    })\r\n    .catch(() => {\r\n      // catch error\r\n    });\r\n};\r\n\r\n// 添加/编辑用户的form数据\r\nconst formUser = reactive({\r\n  name: \"\",\r\n  phonenumber: 1,\r\n  software: \"\",\r\n  department: \"\",\r\n});\r\n\r\n// 添加/编辑用户\r\nconst onSubmit = () => {\r\n  // console.log(\"formUser\",formUser);\r\n  proxy.$refs.userForm.validate(async (valid) => {\r\n    if (valid) {\r\n      if (action.value == \"add\") {\r\n        let res = await proxy.$api.addUser(formUser);\r\n        console.log(\"res\", res);\r\n        if (res) {\r\n          dialogVisible.value = false;\r\n          // console.log(proxy.$refs);\r\n          // console.log(proxy.$refs.userForm);\r\n          // resetFields需要在el-form-item标签体内添加属性prop\r\n          proxy.$refs.userForm.resetFields();\r\n          getUserData(config);\r\n          ElMessage({\r\n            showClose: true,\r\n            message: \"添加成功\",\r\n            type: \"success\",\r\n          });\r\n        }\r\n      } else {\r\n        // 编辑的接口\r\n        // console.log(formUser);\r\n        let res = await proxy.$api.editUser(formUser);\r\n        // console.log('res',res);\r\n        if (res) {\r\n          dialogVisible.value = false;\r\n          // console.log(proxy.$refs);\r\n          // console.log(proxy.$refs.userForm);\r\n          // resetFields需要在el-form-item标签体内添加属性prop\r\n          proxy.$refs.userForm.resetFields();\r\n          getUserData(config);\r\n        }\r\n        ElMessage({\r\n          showClose: true,\r\n          message: \"编辑成功\",\r\n          type: \"success\",\r\n        });\r\n      }\r\n    } else {\r\n      ElMessage({\r\n        showClose: true,\r\n        message: \"请输入正确的内容\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n// 表单页面点击取消后，清除表单上面的内容 包括填写的内容和报错提示\r\nconst handleCancel = () => {\r\n  dialogVisible.value = false;\r\n  // resetFields需要在el-form-item标签体内添加属性prop\r\n  proxy.$refs.userForm.resetFields();\r\n};\r\n\r\n// 区分编辑和新增\r\nconst action = ref(\"add\");\r\n\r\n// 编辑用户\r\nconst handleEdit = (row) => {\r\n  console.log(\"handleEdit\", row);\r\n  dialogVisible.value = true;\r\n  action.value = \"edit\";\r\n  // console.log('handleEdit',row)\r\n  // 下面的代码会将得到数据展示到打开的输入框中\r\n  // 如果不加入nexttick函数，直接使用浅拷贝Object.assign(formUser,row)的话\r\n  // 点击编辑后，会将说点击的用户信息显示在编辑框中，但是在关闭这个对话框后\r\n  // 再次点击新增按钮后,弹出的新增框中也会有之前编辑的用户所有信息，\r\n  // 所以为了避免这个情况的发生，需要将浅拷贝放到nextTicK函数中\r\n  proxy.$nextTick(() => {\r\n    // 浅拷贝\r\n    Object.assign(formUser, row);\r\n  });\r\n};\r\n\r\n// 新增用户\r\nconst handleAdd = () => {\r\n  dialogVisible.value = true;\r\n  action.value = \"add\";\r\n};\r\n\r\n// 删除用户\r\nconst handleDelete = (row) => {\r\n  // console.log(row)\r\n  ElMessageBox.confirm(\"确定删除吗?\")\r\n    .then(async () => {\r\n      // resetFields需要在el-form-item标签体内添加属性prop\r\n      await proxy.$api.deleteUser({\r\n        id: row.id,\r\n      });\r\n      ElMessage({\r\n        showClose: true,\r\n        message: \"删除成功\",\r\n        type: \"success\",\r\n      });\r\n      getUserData(config);\r\n    })\r\n    .catch(() => {});\r\n};\r\n\r\nonMounted(() => {\r\n  getUserData(config);\r\n});\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n.user-main {\r\n  padding: 20px;\r\n}\r\n.table {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 520px;\r\n  .pager {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: -20px;\r\n  }\r\n}\r\n.user-header {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n}\r\n</style>>","import script from \"./User.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./User.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./User.vue?vue&type=style&index=0&id=61338446&lang=less&scoped=true\"\n\nimport exportComponent from \"E:\\\\Vue\\\\project\\\\mbse_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-61338446\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","proxy","getCurrentInstance","list","ref","tableLabel","reactive","prop","label","width","config","total","page","limit","name","async","getUserData","res","$api","count","value","map","item","changePage","formInline","keyword","handleSearch","dialogVisible","handleClose","done","ElMessageBox","then","$refs","userForm","resetFields","catch","formUser","phonenumber","software","department","onSubmit","validate","valid","action","addUser","console","log","ElMessage","showClose","message","type","editUser","handleCancel","handleEdit","row","$nextTick","Object","assign","handleAdd","handleDelete","deleteUser","id","onMounted","__exports__"],"sourceRoot":""}